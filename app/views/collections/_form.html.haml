= form_for @collection, html: {class: "collection-form"} do |f|
  - if @collection.errors.any?
    #error-explanation
      %h1= "#{pluralize(@collection.errors.count, "error")} prohibited this collection from being saved:"
      %ul
        - @collection.errors.full_messages.each do |msg|
          %li= msg
    
  %fieldset
    %legend
      Collection

    .field#collection-parent
      = f.label :parent_id, "Parent Collection"
      %select{id: "collection_parent_id", name: "collection[parent_id]", class: "tiered"}
        %option{class: "top-level"}
          Main Collection / No Parent
        %optgroup{label: "Existing Collections"}
          - @collections = Collection.all
          - @collections.select{ |element| element.parent_id == 0 }.each do |collection|
            = render "collection_select", collection: collection, level: -1, f: f

    .field.required
      = f.label :title
      = f.text_field :title
      
    .field
      = f.label :link
      = f.text_field :link

      %div.instructions.link
        (If used, "Link" will connect directly without displaying the contents of this page. Prefix "http://" to all external links. Use "/" for all internal. e.g.: "/locations")

    #collection-image.singular-addable
      .addable-group.images
        = f.fields_for :images do |image_builder|
          = render 'images/image_fields', f: image_builder

      - if f.object.images.blank?
        .addable.admin-button
          = link_to_add_fields({ name: "Add Image", f: f, association: :images, container: "collection-image" })

    .field
      %p.alt
        Description is not required for children. A child without a description will use it's parents' description.
      = f.cktext_area :description
      %p.required
        Description is required 

  %fieldset
    %legend.required
      Brands
      %span.alt
        &mdash; Brands are not required for children. A child without brands will use it's parents' brands. 
    .field
      = hidden_field_tag "collection[brand_ids][]", nil
      .column
        .column-group
          - Brand.all.each do |brand|
            %ul
              = render "brands/brand_checkboxes", brand: brand, f: f, collection: @collection

  %fieldset
    %legend.required
      Styles
      %span.alt
        &mdash; Styles are not required for children. A child without styles will use it's parents' styles. 
    .field
      = hidden_field_tag "collection[style_ids][]", nil
      .column
        .column-group
          - Style.all.each do |style|
            %ul
              = render "styles/style_collection_checkboxes", style: style, f: f, collection: @collection

  .actions
    = f.submit 'Save'
